using System;
using System.Globalization;

namespace Math3D
{
    public struct Vector6 : IEquatable<Vector6>
    {
        #region "Shared Public Functions"

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public static Vector6 operator *(float scale, Vector6 vec)
        {
            vec.X *= scale;
            vec.Y *= scale;
            vec.Z *= scale;
            return vec;
        }

        public static Vector6 operator *(Vector6 vec, float scale)
        {
            vec.X *= scale;
            vec.Y *= scale;
            vec.Z *= scale;
            return vec;
        }

        public override string ToString()
        {
            return X.ToString(CultureInfo.InvariantCulture) + ";" + Y.ToString(CultureInfo.InvariantCulture) + ";" + Z.ToString(CultureInfo.InvariantCulture);
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        public static Vec3f Transform(Vector6 vec, Mtx4 mat)
        {
            Vec4 v4 = new Vec4(vec.X, vec.Y, vec.Z, 1.0);
            v4 = Vec4.Transform(v4, mat);
            return (Vec3f)v4;
        }

        public static bool operator ==(Vector6 v1, Vector6 v2)
        {
            return (v1.X == v2.X && v1.Y == v2.Y && v1.Z == v2.Z && v1.I == v2.I && v1.J == v2.J && v1.K == v2.K);
        }

        public static bool operator !=(Vector6 v1, Vector6 v2)
        {
            return (v1.X != v2.X || v1.Y != v2.Y || v1.Z != v2.Z || v1.I != v2.I || v1.J != v2.J || v1.K != v2.K);
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Shared Public Functions"

        #region "Public Variables"

        public float X;
        public float Y;
        public float Z;

        public float I;
        public float J;
        public float K;

        #endregion "Public Variables"

        #region "Public Functions"

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public bool Equals(Vector6 other)
        {
            return
                X == other.X &&
                Y == other.Y &&
                Z == other.Z &&
                I == other.I &&
                J == other.J &&
                K == other.K;
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public override bool Equals(object obj)
        {
            if (!(obj is Vector6))
                return false;

            return this.Equals((Vector6)obj);
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public override int GetHashCode()
        {
            return X.GetHashCode() ^ Y.GetHashCode() ^ Z.GetHashCode();
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public void Normalize()
        {
            float scale = 1.0f / this.Length;
            X *= scale;
            Y *= scale;
            Z *= scale;
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public Vector6(float x, float y, float z, float i, float j, float k)
        {
            X = x;
            Y = y;
            Z = z;
            I = i;
            J = j;
            K = k;
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Public Functions"

        #region "Public Properties"

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public float Length
        {
            get
            {
                return (float)System.Math.Sqrt(X * X + Y * Y + Z * Z);
            }
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public float LengthSquared
        {
            get
            {
                return X * X + Y * Y + Z * Z;
            }
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Public Properties"

        public static explicit operator Vec3f(Vector6 v6)
        {
            Vec3f v3;
            v3.X = v6.X;
            v3.Y = v6.Y;
            v3.Z = v6.Z;
            return v3;
        }

        public static Vec3f operator -(Vector6 v6, Vec3f v3)
        {
            return new Vec3f(v6.X - v3.X, v6.Y - v3.Y, v6.Z - v3.Z);
        }
    }
}