using System;
using System.Collections.Generic;

namespace Math3D
{
    public class VectorComparer : IEqualityComparer<Vec3f>, IEqualityComparer<Vector6>, IEqualityComparer<Vector6[]>
    {
        #region "Shared Public Functions"

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public static VectorComparer operator *(float s, VectorComparer vc)
        {
            return new VectorComparer(vc.Precision * s);
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Shared Public Functions"

        #region "Variables"

        private float Precision = 0;

        #endregion "Variables"

        #region "Public Functions"

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public bool Check(Vector6 x, Vector6 y)
        {
            return (
                    Math.Abs(x.X - y.X) < Precision &&
                    Math.Abs(x.Y - y.Y) < Precision &&
                    Math.Abs(x.Z - y.Z) < Precision
                    );
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public bool Check(Vec3f x, Vec3f y)
        {
            return (
                    Math.Abs(x.X - y.X) < Precision &&
                    Math.Abs(x.Y - y.Y) < Precision &&
                    Math.Abs(x.Z - y.Z) < Precision
                    );
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public bool Check(Vector6 x, Vec3f y)
        {
            return (
                    Math.Abs(x.X - y.X) < Precision &&
                    Math.Abs(x.Y - y.Y) < Precision &&
                    Math.Abs(x.Z - y.Z) < Precision
                    );
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        public VectorComparer(float iPrecision)
        {
            Precision = iPrecision;
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Public Functions"

        #region "Functions"

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        bool IEqualityComparer<Vec3f>.Equals(Vec3f x, Vec3f y)
        {
            return (
                    Math.Abs(x.X - y.X) < Precision &&
                    Math.Abs(x.Y - y.Y) < Precision &&
                    Math.Abs(x.Z - y.Z) < Precision
                    );
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        int IEqualityComparer<Vec3f>.GetHashCode(Vec3f obj)
        {
            return Precision.GetHashCode();
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        bool IEqualityComparer<Vector6>.Equals(Vector6 x, Vector6 y)
        {
            return (
                   Math.Abs(x.X - y.X) < Precision &&
                   Math.Abs(x.Y - y.Y) < Precision &&
                   Math.Abs(x.Z - y.Z) < Precision
                   );
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        int IEqualityComparer<Vector6>.GetHashCode(Vector6 obj)
        {
            return Precision.GetHashCode();
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        bool IEqualityComparer<Vector6[]>.Equals(Vector6[] x, Vector6[] y)
        {
            if (x.Length != y.Length) return false;
            if (Check(x[0], y[0]) == false) return false;
            if (Check(x[x.Length - 1], y[y.Length - 1]) == false) return false;
            return true;
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------
        //------------------------------------------------------------------------------------------------------------------------------------------------------
        int IEqualityComparer<Vector6[]>.GetHashCode(Vector6[] obj)
        {
            return this.GetHashCode();
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------------

        #endregion "Functions"
    }
}